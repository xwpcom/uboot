////////////////////////////////////////////////////////////////////////////////////////////////
2017.08.09//////////////////////////////////////////////////////////////////////////////////////
.把serial.cpp中的api放在main.cpp中编译和运行正常
 但api放在serial.cpp中时，编译报undefined reference to `__aeabi_unwind_cpp_pr1'
//已解决,增加 -fno-exceptions 即可
//参考 ttps://stackoverflow.com/questions/44210812/what-is-aeabi-unwind-cpp-pr1-and-how-can-i-avoid-it


todo:
.采用cmake
参考 http://blog.163.com/hotman_x.vip/blog/static/48950133201652203818519/

cmake中要明确启用汇率
enable_language( ASM )

set(CMAKE_SYSTEM_NAME Generic)
set(CMAKE_SYSTEM_PROCESSOR arm)
set(CMAKE_CROSSCOMPILING TRUE)

cmake部分成功
.S采用普通makefile来编译，生成head.o
.cpp采用cmake来编译,编译时报warning: cannot find entry symbol _start; defaulting to 00008074,不用管它
然后用如下命令来生成uboot++.bin
/opt/hisi-linux/x86-arm/arm-hisiv300-linux/bin/arm-hisiv300-linux-uclibcgnueabi-ld -static -nostartfiles -nodefaultlibs -nostdlib -T../leds.lds -o uboot++.elf ../head.o ./CMakeFiles/uboot++.dir/init.cpp.o ./CMakeFiles/uboot++.dir/serial.cpp.o ./CMakeFiles/uboot++.dir/main.cpp.o
/opt/hisi-linux/x86-arm/arm-hisiv300-linux/bin/arm-hisiv300-linux-uclibcgnueabi-objcopy -O binary -S uboot++.elf uboot++.bin
用oflash烧录uboot++.bin即可测试运行

生成uboot++bin的汇编列表文件(可选)
/opt/hisi-linux/x86-arm/arm-hisiv300-linux/bin/arm-hisiv300-linux-uclibcgnueabi-objdump -D -m arm uboot++.elf > uboot++.dis




////////////////////////////////////////////////////////////////////////////////////////////////
XiongWanPing 2017.08.19/////////////////////////////////////////////////////////////////////////
采用s3c2440来学习硬件底层

